{"version":3,"sources":["content.js","components/Header/components/BurgerMenu/styles.jsx","components/Header/components/BurgerMenu/BurgerMenu.jsx","components/Header/components/BurgerMenuIcon/styles.jsx","components/Header/components/BurgerMenuIcon/BurgerMenuIcon.jsx","components/Header/styles.jsx","components/Header/Header.jsx","hooks/useBurgerMenu.js","components/Theme/GlobalStyle.jsx","components/Theme/Theme.jsx","serviceWorker.js","index.js","App.js"],"names":["menuItems","fadeIn","keyframes","fadeOut","fadeInAnimation","css","fadeOutAnimation","defaultBlue","theme","colors","Container","styled","div","visible","MenuList","ul","MenuItem","li","Item","ItemLink","a","MenuContent","map","item","href","toLowerCase","BurgerMenu","BurgerMenuSvg","svg","BurgerMenuIcon","props","viewBox","onClick","d","HeaderComponent","header","Logo","fontSizes","logo","fonts","raleway","List","ItemList","ItemMenu","menu","textColor","Header","useState","displayMenu","setdisplayMenu","handleClick","useBurgerMenu","key","id","GlobalStyle","createGlobalStyle","opensans","text","title","Theme","children","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.814c94de.chunk.js","sourcesContent":["const menuItems = [\"About\", \"Professional\", \"Skills\", \"Contact\"];\n\nexport { menuItems };\n","import styled, { keyframes, css } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`;\n\nconst fadeInAnimation = css`\n  animation: ${fadeIn} 0.7s cubic-bezier(0.39, 0.575, 0.565, 1) both;\n`;\n\nconst fadeOutAnimation = css`\n  animation: ${fadeOut} 2s ease-out both;\n`;\n\nconst defaultBlue = ({ theme }) => theme.colors.defaultBlue;\nexport const Container = styled.div`\n  visibility: ${({ visible }) => (visible ? \"visible\" : \"hidden\")};\n  display: block;\n  height: auto;\n  width: 100%;\n  ${({ visible }) => (visible ? fadeInAnimation : fadeOutAnimation)}\n`;\n\nexport const MenuList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MenuItem = styled.li`\n  &:hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`;\n\nexport const Item = styled.div`\n  padding: 30px;\n  border-bottom: 1px solid ${defaultBlue};\n`;\n\nexport const ItemLink = styled.a`\n  text-decoration: none;\n  font-size: 16px;\n  color: ${defaultBlue};\n`;\n","import React from \"react\";\nimport { menuItems } from \"content\";\nimport { Container, Item, ItemLink, MenuList, MenuItem } from \"./styles\";\n\nconst MenuContent = () =>\n  menuItems.map(item => (\n    <MenuItem>\n      <Item>\n        <ItemLink href={`#${item.toLowerCase()}`}>{item}</ItemLink>\n      </Item>\n    </MenuItem>\n  ));\nexport const BurgerMenu = ({ visible }) => {\n  return (\n    <Container visible={visible}>\n      <MenuList>\n        <MenuContent />\n      </MenuList>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nconst defaultBlue = ({ theme }) => theme.colors.defaultBlue;\n\nexport const BurgerMenuSvg = styled.svg`\n  fill: ${defaultBlue};\n  height: 25px;\n  width: 25px;\n  padding: 5px;\n  border: 1px solid ${defaultBlue};\n  border-radius: 5px;\n  align-self: center;\n  margin: auto 30px;\n  display: none;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  @media screen and (max-width: 805px) {\n    display: block;\n  }\n`;\n","import React from \"react\";\n\nimport { BurgerMenuSvg } from \"./styles\";\n\nexport const BurgerMenuIcon = props => (\n  <BurgerMenuSvg viewBox=\"0 0 32 32\" onClick={props.onClick}>\n    <path d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\" />\n  </BurgerMenuSvg>\n);\n","import styled from \"styled-components\";\n\nexport const HeaderComponent = styled.header`\n  width: 100%;\n  height: 80px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.defaultBlue};\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n`;\n\nexport const Logo = styled.div`\n  margin: auto 30px;\n  font-size: ${({ theme }) => theme.fontSizes.logo};\n  font-family: ${({ theme }) => theme.fonts.raleway};\n  color: ${({ theme }) => theme.colors.defaultBlue};\n\n  @media screen and (max-width: 805px) {\n    margin: auto;\n  }\n`;\n\nexport const MenuList = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 805px) {\n    position: absolute;\n    top: 30px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  padding: 0;\n\n  @media screen and (max-width: 805px) {\n    display: none;\n  }\n`;\n\nexport const ItemList = styled.li`\n  display: table;\n  height: 100%;\n  margin: auto 30px;\n`;\n\nexport const ItemMenu = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  font-size: ${({ theme }) => theme.fontSizes.menu};\n  color: ${({ theme }) => theme.colors.textColor};\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\nimport { useBurgerMenu } from \"hooks/useBurgerMenu\";\nimport { BurgerMenu, BurgerMenuIcon } from \"./components\";\nimport { menuItems } from \"content\";\n\nimport {\n  HeaderComponent,\n  ItemList,\n  ItemMenu,\n  Logo,\n  MenuList,\n  List\n} from \"./styles\";\n\nexport const Header = () => {\n  const { handleClick, displayMenu } = useBurgerMenu();\n  return (\n    <>\n      <HeaderComponent>\n        <Logo>ROMARIO GOMES</Logo>\n        <MenuList>\n          <List>\n            {menuItems.map(item => (\n              <ItemList key={item.toLowerCase()} id={`#${item.toLowerCase()}`}>\n                <ItemMenu>{item}</ItemMenu>\n              </ItemList>\n            ))}\n          </List>\n          <BurgerMenuIcon onClick={handleClick} />\n        </MenuList>\n      </HeaderComponent>\n      <BurgerMenu visible={displayMenu} />\n    </>\n  );\n};\n","import { useState } from \"react\";\n\nconst useBurgerMenu = () => {\n  const [displayMenu, setdisplayMenu] = useState(false);\n\n  const handleClick = () => setdisplayMenu(!displayMenu);\n\n  return { displayMenu, handleClick };\n};\n\nexport { useBurgerMenu };\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    @import url(\"https://fonts.googleapis.com/css?family=Raleway&display=swap\");\n    @import url(\"https://fonts.googleapis.com/css?family=Open+Sans&display=swap\");\n    \n    body {\n        font-family: 'Open Sans', sans-serif;\n    }\n`;\n\nexport { GlobalStyle };\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst theme = {\n  colors: {\n    defaultBlue: \"#00c4f3\",\n    textColor: \"#777\"\n  },\n  fonts: {\n    opensans: \"'Open Sans', sans-serif\",\n    raleway: \"'Raleway', sans-serif\"\n  },\n\n  fontSizes: {\n    text: \"14px\",\n    title: \"16px\",\n    logo: \"30px\",\n    menu: \"16px\"\n  }\n};\n\nexport const Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    {children}\n    <GlobalStyle />\n  </ThemeProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nimport { Header } from \"components/Header\";\nimport { Theme } from \"components/Theme\";\n\nexport const App = () => {\n  return (\n    <Theme>\n      <Header />\n    </Theme>\n  );\n};\n"],"sourceRoot":""}